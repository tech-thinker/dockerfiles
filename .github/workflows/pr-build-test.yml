name: PR Buildx Test

on:
  pull_request:
    branches:
      - main
jobs:
  build-stratigy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          sudo apt-get install jq
          echo "::set-output name=matrix::$(bash prepare.sh)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  builder:
    needs: build-stratigy
    strategy:
      max-parallel: 2
      matrix:
        dirs: ${{fromJson(needs.build-stratigy.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Init builder
        id: pre-build
        run: |
          dir=${{ matrix.dirs }}
          # dir=$(echo "$dir" | sed 's/\/*$//g')
          echo ::set-output name=org_name::"techthinkerorg"
          echo ::set-output name=image_name::"$dir"
          echo ::set-output name=version::$(head -n1 "${dir}/.version")
          echo ::set-output name=arch::$(head -n1 "${dir}/.arch")
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{steps.pre-build.outputs.org_name}}/${{steps.pre-build.outputs.image_name}}
          DOCKER_PLATFORMS=${{steps.pre-build.outputs.arch}}
          VERSION=${{steps.pre-build.outputs.version}}
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          if [ $VERSION = latest -o $VERSION = nightly ]; then
            TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--file ${{steps.pre-build.outputs.image_name}}/Dockerfile \
            --platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Docker Buildx (build)
        run: |
          docker buildx build --no-cache --pull --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
      - name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json